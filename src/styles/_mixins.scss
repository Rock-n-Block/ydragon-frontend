@import './variables';

@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;
    font-display: swap;
    src: url('#{$file-path}.woff') format('woff');
  }
}

@mixin b($point) {
  @if $point==desktop {
    @media (max-width: $mediaWidthLaptop) {
      @content;
    }
  } @else if $point==tablet {
    @media (max-width: $mediaWidthDesktop) {
      @content;
    }
  } @else if $point==mobile {
    @media (max-width: $mediaWidthTablet) {
      @content;
    }
  } @else if $point==extramobile {
    @media (max-width: $mediaWidthMobile) {
      @content;
    }
  } @else if $point==mobile3x {
    @media only screen and (-webkit-min-device-pixel-ratio: 3),
      only screen and (min-resolution: 3dppx),
      only screen and (min-resolution: 350dpi) {
      @content;
    }
  } @else {
    @media (max-width: $point + 'px') {
      @content;
    }
  }
}

@mixin respond-above($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @media (min-width: $breakpoint-value) {
      @content;
    }
  } @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin respond-below($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }
  } @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin gradient-text {
  font-family: 'Monument Extended', sans-serif;
  font-weight: normal;
  letter-spacing: 0.1em;

  background: $gradient;
  background-clip: text;
  -webkit-text-fill-color: transparent;

  &::selection {
    -webkit-text-fill-color: $white;
  }

  ::selection {
    -webkit-text-fill-color: $white;
  }
}

@mixin title-text {
  font-family: 'Monument Extended', sans-serif;
  font-size: 15px;
  font-weight: 800;
  line-height: 20px;
  letter-spacing: 0.8em;
  text-transform: uppercase;

  color: white;
}

@mixin normal-text {
  font-size: 16px;
  line-height: 24px;
  letter-spacing: 0.035em;

  color: white;
}

/*@mixin shadow-block {
  background: linear-gradient(180deg, rgba(0, 0, 0, 0.1) 0%, rgba(0, 0, 0, 0) 100%),
    linear-gradient(171.49deg, #1a1e3a 3.83%, #161a2a 100%);
  border-radius: 16px;
  box-shadow: $shadow-dark;
}*/
/*
@mixin light-block {
  background: #fff;
  border-radius: 16px;
  box-shadow: $shadow;
} */

@mixin shadow-dark-block {
  background: linear-gradient(180deg, rgba(255, 255, 255, 0.06) 0%, rgba(255, 255, 255, 0.1) 100%);
  box-shadow: -8px 8px 36px rgba(0, 0, 0, 0.5);
  border-radius: 32px;
}

@mixin shadow-index-hover {
  background: linear-gradient(180deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.1) 100%);
  box-shadow: -8px 8px 36px rgba(0, 0, 0, 0.5);
}

@mixin shadow-light-block {
  background: linear-gradient(355.19deg, #fff 0%, #dde1f0 100%);
  border-radius: 32px;
  box-shadow: -8px 8px 36px rgba(203, 209, 230, 0.3);
}

@mixin text-ellipsis($max-width: 100%) {
  max-width: $max-width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
